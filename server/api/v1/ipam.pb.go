// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: v1/ipam.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Prefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr       string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentCidr string `protobuf:"bytes,3,opt,name=parent_cidr,json=parentCidr,proto3" json:"parent_cidr,omitempty"`
}

func (x *Prefix) Reset() {
	*x = Prefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prefix) ProtoMessage() {}

func (x *Prefix) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prefix.ProtoReflect.Descriptor instead.
func (*Prefix) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{0}
}

func (x *Prefix) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Prefix) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Prefix) GetParentCidr() string {
	if x != nil {
		return x.ParentCidr
	}
	return ""
}

type PrefixResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix *Prefix `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *PrefixResponse) Reset() {
	*x = PrefixResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefixResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixResponse) ProtoMessage() {}

func (x *PrefixResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixResponse.ProtoReflect.Descriptor instead.
func (*PrefixResponse) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{1}
}

func (x *PrefixResponse) GetPrefix() *Prefix {
	if x != nil {
		return x.Prefix
	}
	return nil
}

type CreatePrefixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr      string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CreatePrefixRequest) Reset() {
	*x = CreatePrefixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrefixRequest) ProtoMessage() {}

func (x *CreatePrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrefixRequest.ProtoReflect.Descriptor instead.
func (*CreatePrefixRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePrefixRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *CreatePrefixRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type DeletePrefixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr      string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DeletePrefixRequest) Reset() {
	*x = DeletePrefixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrefixRequest) ProtoMessage() {}

func (x *DeletePrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrefixRequest.ProtoReflect.Descriptor instead.
func (*DeletePrefixRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{3}
}

func (x *DeletePrefixRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *DeletePrefixRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetPrefixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr      string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetPrefixRequest) Reset() {
	*x = GetPrefixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrefixRequest) ProtoMessage() {}

func (x *GetPrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrefixRequest.ProtoReflect.Descriptor instead.
func (*GetPrefixRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{4}
}

func (x *GetPrefixRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *GetPrefixRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type AcquireChildPrefixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr      string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Length    uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AcquireChildPrefixRequest) Reset() {
	*x = AcquireChildPrefixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireChildPrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireChildPrefixRequest) ProtoMessage() {}

func (x *AcquireChildPrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireChildPrefixRequest.ProtoReflect.Descriptor instead.
func (*AcquireChildPrefixRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{5}
}

func (x *AcquireChildPrefixRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *AcquireChildPrefixRequest) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *AcquireChildPrefixRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ReleaseChildPrefixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr      string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ReleaseChildPrefixRequest) Reset() {
	*x = ReleaseChildPrefixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseChildPrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseChildPrefixRequest) ProtoMessage() {}

func (x *ReleaseChildPrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseChildPrefixRequest.ProtoReflect.Descriptor instead.
func (*ReleaseChildPrefixRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{6}
}

func (x *ReleaseChildPrefixRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *ReleaseChildPrefixRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type IP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip           string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Namespace    string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentPrefix string `protobuf:"bytes,3,opt,name=parent_prefix,json=parentPrefix,proto3" json:"parent_prefix,omitempty"`
}

func (x *IP) Reset() {
	*x = IP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IP) ProtoMessage() {}

func (x *IP) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IP.ProtoReflect.Descriptor instead.
func (*IP) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{7}
}

func (x *IP) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IP) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *IP) GetParentPrefix() string {
	if x != nil {
		return x.ParentPrefix
	}
	return ""
}

type AcquireIPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip *IP `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *AcquireIPResponse) Reset() {
	*x = AcquireIPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireIPResponse) ProtoMessage() {}

func (x *AcquireIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireIPResponse.ProtoReflect.Descriptor instead.
func (*AcquireIPResponse) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{8}
}

func (x *AcquireIPResponse) GetIp() *IP {
	if x != nil {
		return x.Ip
	}
	return nil
}

type ReleaseIPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip *IP `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ReleaseIPResponse) Reset() {
	*x = ReleaseIPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseIPResponse) ProtoMessage() {}

func (x *ReleaseIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseIPResponse.ProtoReflect.Descriptor instead.
func (*ReleaseIPResponse) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{9}
}

func (x *ReleaseIPResponse) GetIp() *IP {
	if x != nil {
		return x.Ip
	}
	return nil
}

type AcquireIPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrefixCidr string                  `protobuf:"bytes,1,opt,name=prefix_cidr,json=prefixCidr,proto3" json:"prefix_cidr,omitempty"`
	Namespace  string                  `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Ip         *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *AcquireIPRequest) Reset() {
	*x = AcquireIPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireIPRequest) ProtoMessage() {}

func (x *AcquireIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireIPRequest.ProtoReflect.Descriptor instead.
func (*AcquireIPRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{10}
}

func (x *AcquireIPRequest) GetPrefixCidr() string {
	if x != nil {
		return x.PrefixCidr
	}
	return ""
}

func (x *AcquireIPRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AcquireIPRequest) GetIp() *wrapperspb.StringValue {
	if x != nil {
		return x.Ip
	}
	return nil
}

type ReleaseIPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrefixCidr string `protobuf:"bytes,1,opt,name=prefix_cidr,json=prefixCidr,proto3" json:"prefix_cidr,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Ip         string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ReleaseIPRequest) Reset() {
	*x = ReleaseIPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseIPRequest) ProtoMessage() {}

func (x *ReleaseIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseIPRequest.ProtoReflect.Descriptor instead.
func (*ReleaseIPRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseIPRequest) GetPrefixCidr() string {
	if x != nil {
		return x.PrefixCidr
	}
	return ""
}

func (x *ReleaseIPRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReleaseIPRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_v1_ipam_proto protoreflect.FileDescriptor

var file_v1_ipam_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x31, 0x2f, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x64, 0x72,
	0x22, 0x34, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x65,
	0x0a, 0x19, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x02, 0x49, 0x50, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x2b, 0x0a,
	0x11, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x52, 0x02, 0x69, 0x70, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x50, 0x52, 0x02, 0x69, 0x70, 0x22, 0x7f, 0x0a, 0x10, 0x41, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x43, 0x69, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x70, 0x22, 0x61, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x43, 0x69, 0x64, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x32, 0xc4, 0x03, 0x0a, 0x0b,
	0x49, 0x70, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x17, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x50, 0x12, 0x14, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x50,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x49, 0x50, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_v1_ipam_proto_rawDescOnce sync.Once
	file_v1_ipam_proto_rawDescData = file_v1_ipam_proto_rawDesc
)

func file_v1_ipam_proto_rawDescGZIP() []byte {
	file_v1_ipam_proto_rawDescOnce.Do(func() {
		file_v1_ipam_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_ipam_proto_rawDescData)
	})
	return file_v1_ipam_proto_rawDescData
}

var file_v1_ipam_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_ipam_proto_goTypes = []interface{}{
	(*Prefix)(nil),                    // 0: v1.Prefix
	(*PrefixResponse)(nil),            // 1: v1.PrefixResponse
	(*CreatePrefixRequest)(nil),       // 2: v1.CreatePrefixRequest
	(*DeletePrefixRequest)(nil),       // 3: v1.DeletePrefixRequest
	(*GetPrefixRequest)(nil),          // 4: v1.GetPrefixRequest
	(*AcquireChildPrefixRequest)(nil), // 5: v1.AcquireChildPrefixRequest
	(*ReleaseChildPrefixRequest)(nil), // 6: v1.ReleaseChildPrefixRequest
	(*IP)(nil),                        // 7: v1.IP
	(*AcquireIPResponse)(nil),         // 8: v1.AcquireIPResponse
	(*ReleaseIPResponse)(nil),         // 9: v1.ReleaseIPResponse
	(*AcquireIPRequest)(nil),          // 10: v1.AcquireIPRequest
	(*ReleaseIPRequest)(nil),          // 11: v1.ReleaseIPRequest
	(*wrapperspb.StringValue)(nil),    // 12: google.protobuf.StringValue
}
var file_v1_ipam_proto_depIdxs = []int32{
	0,  // 0: v1.PrefixResponse.prefix:type_name -> v1.Prefix
	7,  // 1: v1.AcquireIPResponse.ip:type_name -> v1.IP
	7,  // 2: v1.ReleaseIPResponse.ip:type_name -> v1.IP
	12, // 3: v1.AcquireIPRequest.ip:type_name -> google.protobuf.StringValue
	2,  // 4: v1.IpamService.CreatePrefix:input_type -> v1.CreatePrefixRequest
	3,  // 5: v1.IpamService.DeletePrefix:input_type -> v1.DeletePrefixRequest
	4,  // 6: v1.IpamService.GetPrefix:input_type -> v1.GetPrefixRequest
	5,  // 7: v1.IpamService.AcquireChildPrefix:input_type -> v1.AcquireChildPrefixRequest
	6,  // 8: v1.IpamService.ReleaseChildPrefix:input_type -> v1.ReleaseChildPrefixRequest
	10, // 9: v1.IpamService.AcquireIP:input_type -> v1.AcquireIPRequest
	11, // 10: v1.IpamService.ReleaseIP:input_type -> v1.ReleaseIPRequest
	1,  // 11: v1.IpamService.CreatePrefix:output_type -> v1.PrefixResponse
	1,  // 12: v1.IpamService.DeletePrefix:output_type -> v1.PrefixResponse
	1,  // 13: v1.IpamService.GetPrefix:output_type -> v1.PrefixResponse
	1,  // 14: v1.IpamService.AcquireChildPrefix:output_type -> v1.PrefixResponse
	1,  // 15: v1.IpamService.ReleaseChildPrefix:output_type -> v1.PrefixResponse
	8,  // 16: v1.IpamService.AcquireIP:output_type -> v1.AcquireIPResponse
	9,  // 17: v1.IpamService.ReleaseIP:output_type -> v1.ReleaseIPResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_v1_ipam_proto_init() }
func file_v1_ipam_proto_init() {
	if File_v1_ipam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_ipam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireChildPrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseChildPrefixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireIPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseIPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireIPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseIPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_ipam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_ipam_proto_goTypes,
		DependencyIndexes: file_v1_ipam_proto_depIdxs,
		MessageInfos:      file_v1_ipam_proto_msgTypes,
	}.Build()
	File_v1_ipam_proto = out.File
	file_v1_ipam_proto_rawDesc = nil
	file_v1_ipam_proto_goTypes = nil
	file_v1_ipam_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IpamServiceClient is the client API for IpamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IpamServiceClient interface {
	CreatePrefix(ctx context.Context, in *CreatePrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	DeletePrefix(ctx context.Context, in *DeletePrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	GetPrefix(ctx context.Context, in *GetPrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	AcquireChildPrefix(ctx context.Context, in *AcquireChildPrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	ReleaseChildPrefix(ctx context.Context, in *ReleaseChildPrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	AcquireIP(ctx context.Context, in *AcquireIPRequest, opts ...grpc.CallOption) (*AcquireIPResponse, error)
	ReleaseIP(ctx context.Context, in *ReleaseIPRequest, opts ...grpc.CallOption) (*ReleaseIPResponse, error)
}

type ipamServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIpamServiceClient(cc grpc.ClientConnInterface) IpamServiceClient {
	return &ipamServiceClient{cc}
}

func (c *ipamServiceClient) CreatePrefix(ctx context.Context, in *CreatePrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/CreatePrefix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) DeletePrefix(ctx context.Context, in *DeletePrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/DeletePrefix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) GetPrefix(ctx context.Context, in *GetPrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/GetPrefix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) AcquireChildPrefix(ctx context.Context, in *AcquireChildPrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/AcquireChildPrefix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) ReleaseChildPrefix(ctx context.Context, in *ReleaseChildPrefixRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/ReleaseChildPrefix", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) AcquireIP(ctx context.Context, in *AcquireIPRequest, opts ...grpc.CallOption) (*AcquireIPResponse, error) {
	out := new(AcquireIPResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/AcquireIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) ReleaseIP(ctx context.Context, in *ReleaseIPRequest, opts ...grpc.CallOption) (*ReleaseIPResponse, error) {
	out := new(ReleaseIPResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/ReleaseIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IpamServiceServer is the server API for IpamService service.
type IpamServiceServer interface {
	CreatePrefix(context.Context, *CreatePrefixRequest) (*PrefixResponse, error)
	DeletePrefix(context.Context, *DeletePrefixRequest) (*PrefixResponse, error)
	GetPrefix(context.Context, *GetPrefixRequest) (*PrefixResponse, error)
	AcquireChildPrefix(context.Context, *AcquireChildPrefixRequest) (*PrefixResponse, error)
	ReleaseChildPrefix(context.Context, *ReleaseChildPrefixRequest) (*PrefixResponse, error)
	AcquireIP(context.Context, *AcquireIPRequest) (*AcquireIPResponse, error)
	ReleaseIP(context.Context, *ReleaseIPRequest) (*ReleaseIPResponse, error)
}

// UnimplementedIpamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIpamServiceServer struct {
}

func (*UnimplementedIpamServiceServer) CreatePrefix(context.Context, *CreatePrefixRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePrefix not implemented")
}
func (*UnimplementedIpamServiceServer) DeletePrefix(context.Context, *DeletePrefixRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePrefix not implemented")
}
func (*UnimplementedIpamServiceServer) GetPrefix(context.Context, *GetPrefixRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrefix not implemented")
}
func (*UnimplementedIpamServiceServer) AcquireChildPrefix(context.Context, *AcquireChildPrefixRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireChildPrefix not implemented")
}
func (*UnimplementedIpamServiceServer) ReleaseChildPrefix(context.Context, *ReleaseChildPrefixRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseChildPrefix not implemented")
}
func (*UnimplementedIpamServiceServer) AcquireIP(context.Context, *AcquireIPRequest) (*AcquireIPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireIP not implemented")
}
func (*UnimplementedIpamServiceServer) ReleaseIP(context.Context, *ReleaseIPRequest) (*ReleaseIPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseIP not implemented")
}

func RegisterIpamServiceServer(s *grpc.Server, srv IpamServiceServer) {
	s.RegisterService(&_IpamService_serviceDesc, srv)
}

func _IpamService_CreatePrefix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePrefixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).CreatePrefix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/CreatePrefix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).CreatePrefix(ctx, req.(*CreatePrefixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_DeletePrefix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePrefixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).DeletePrefix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/DeletePrefix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).DeletePrefix(ctx, req.(*DeletePrefixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_GetPrefix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPrefixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).GetPrefix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/GetPrefix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).GetPrefix(ctx, req.(*GetPrefixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_AcquireChildPrefix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireChildPrefixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).AcquireChildPrefix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/AcquireChildPrefix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).AcquireChildPrefix(ctx, req.(*AcquireChildPrefixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_ReleaseChildPrefix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseChildPrefixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).ReleaseChildPrefix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/ReleaseChildPrefix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).ReleaseChildPrefix(ctx, req.(*ReleaseChildPrefixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_AcquireIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireIPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).AcquireIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/AcquireIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).AcquireIP(ctx, req.(*AcquireIPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_ReleaseIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseIPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).ReleaseIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/ReleaseIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).ReleaseIP(ctx, req.(*ReleaseIPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IpamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.IpamService",
	HandlerType: (*IpamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePrefix",
			Handler:    _IpamService_CreatePrefix_Handler,
		},
		{
			MethodName: "DeletePrefix",
			Handler:    _IpamService_DeletePrefix_Handler,
		},
		{
			MethodName: "GetPrefix",
			Handler:    _IpamService_GetPrefix_Handler,
		},
		{
			MethodName: "AcquireChildPrefix",
			Handler:    _IpamService_AcquireChildPrefix_Handler,
		},
		{
			MethodName: "ReleaseChildPrefix",
			Handler:    _IpamService_ReleaseChildPrefix_Handler,
		},
		{
			MethodName: "AcquireIP",
			Handler:    _IpamService_AcquireIP_Handler,
		},
		{
			MethodName: "ReleaseIP",
			Handler:    _IpamService_ReleaseIP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/ipam.proto",
}
