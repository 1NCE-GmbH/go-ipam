// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: v1/ipam.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Prefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr       string                  `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Namespace  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentCidr string                  `protobuf:"bytes,3,opt,name=parent_cidr,json=parentCidr,proto3" json:"parent_cidr,omitempty"`
}

func (x *Prefix) Reset() {
	*x = Prefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prefix) ProtoMessage() {}

func (x *Prefix) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prefix.ProtoReflect.Descriptor instead.
func (*Prefix) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{0}
}

func (x *Prefix) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Prefix) GetNamespace() *wrapperspb.StringValue {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *Prefix) GetParentCidr() string {
	if x != nil {
		return x.ParentCidr
	}
	return ""
}

type PrefixResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix *Prefix `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *PrefixResponse) Reset() {
	*x = PrefixResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefixResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixResponse) ProtoMessage() {}

func (x *PrefixResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixResponse.ProtoReflect.Descriptor instead.
func (*PrefixResponse) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{1}
}

func (x *PrefixResponse) GetPrefix() *Prefix {
	if x != nil {
		return x.Prefix
	}
	return nil
}

type PrefixCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
}

func (x *PrefixCreateRequest) Reset() {
	*x = PrefixCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefixCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixCreateRequest) ProtoMessage() {}

func (x *PrefixCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixCreateRequest.ProtoReflect.Descriptor instead.
func (*PrefixCreateRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{2}
}

func (x *PrefixCreateRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type PrefixDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
}

func (x *PrefixDeleteRequest) Reset() {
	*x = PrefixDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefixDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixDeleteRequest) ProtoMessage() {}

func (x *PrefixDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixDeleteRequest.ProtoReflect.Descriptor instead.
func (*PrefixDeleteRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{3}
}

func (x *PrefixDeleteRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type PrefixGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
}

func (x *PrefixGetRequest) Reset() {
	*x = PrefixGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefixGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixGetRequest) ProtoMessage() {}

func (x *PrefixGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixGetRequest.ProtoReflect.Descriptor instead.
func (*PrefixGetRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{4}
}

func (x *PrefixGetRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type AcquireChildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr      string                  `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Length    uint32                  `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Namespace *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AcquireChildRequest) Reset() {
	*x = AcquireChildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireChildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireChildRequest) ProtoMessage() {}

func (x *AcquireChildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireChildRequest.ProtoReflect.Descriptor instead.
func (*AcquireChildRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{5}
}

func (x *AcquireChildRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *AcquireChildRequest) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *AcquireChildRequest) GetNamespace() *wrapperspb.StringValue {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type ReleaseChildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr      string                  `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Namespace *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ReleaseChildRequest) Reset() {
	*x = ReleaseChildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseChildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseChildRequest) ProtoMessage() {}

func (x *ReleaseChildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseChildRequest.ProtoReflect.Descriptor instead.
func (*ReleaseChildRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{6}
}

func (x *ReleaseChildRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *ReleaseChildRequest) GetNamespace() *wrapperspb.StringValue {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type IP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip           string                  `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Namespace    *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentPrefix string                  `protobuf:"bytes,3,opt,name=parent_prefix,json=parentPrefix,proto3" json:"parent_prefix,omitempty"`
}

func (x *IP) Reset() {
	*x = IP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IP) ProtoMessage() {}

func (x *IP) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IP.ProtoReflect.Descriptor instead.
func (*IP) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{7}
}

func (x *IP) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IP) GetNamespace() *wrapperspb.StringValue {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *IP) GetParentPrefix() string {
	if x != nil {
		return x.ParentPrefix
	}
	return ""
}

type IPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip *IP `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *IPResponse) Reset() {
	*x = IPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPResponse) ProtoMessage() {}

func (x *IPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPResponse.ProtoReflect.Descriptor instead.
func (*IPResponse) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{8}
}

func (x *IPResponse) GetIp() *IP {
	if x != nil {
		return x.Ip
	}
	return nil
}

type IPAcquireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrefixCidr string                  `protobuf:"bytes,1,opt,name=prefix_cidr,json=prefixCidr,proto3" json:"prefix_cidr,omitempty"`
	Namespace  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Ip         *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *IPAcquireRequest) Reset() {
	*x = IPAcquireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAcquireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAcquireRequest) ProtoMessage() {}

func (x *IPAcquireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAcquireRequest.ProtoReflect.Descriptor instead.
func (*IPAcquireRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{9}
}

func (x *IPAcquireRequest) GetPrefixCidr() string {
	if x != nil {
		return x.PrefixCidr
	}
	return ""
}

func (x *IPAcquireRequest) GetNamespace() *wrapperspb.StringValue {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *IPAcquireRequest) GetIp() *wrapperspb.StringValue {
	if x != nil {
		return x.Ip
	}
	return nil
}

type IPReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrefixCidr string                  `protobuf:"bytes,1,opt,name=prefix_cidr,json=prefixCidr,proto3" json:"prefix_cidr,omitempty"`
	Namespace  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Ip         string                  `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *IPReleaseRequest) Reset() {
	*x = IPReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ipam_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPReleaseRequest) ProtoMessage() {}

func (x *IPReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ipam_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPReleaseRequest.ProtoReflect.Descriptor instead.
func (*IPReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1_ipam_proto_rawDescGZIP(), []int{10}
}

func (x *IPReleaseRequest) GetPrefixCidr() string {
	if x != nil {
		return x.PrefixCidr
	}
	return ""
}

func (x *IPReleaseRequest) GetNamespace() *wrapperspb.StringValue {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *IPReleaseRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_v1_ipam_proto protoreflect.FileDescriptor

var file_v1_ipam_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x31, 0x2f, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64,
	0x72, 0x12, 0x3a, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x64, 0x72, 0x22, 0x34,
	0x0a, 0x0e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x22, 0x29, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x22,
	0x29, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x22, 0x26, 0x0a, 0x10, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x64, 0x72, 0x22, 0x7d, 0x0a, 0x13, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x65, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x3a, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x75, 0x0a, 0x02, 0x49, 0x50, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x3a,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22,
	0x24, 0x0a, 0x0a, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x50, 0x52, 0x02, 0x69, 0x70, 0x22, 0x9d, 0x01, 0x0a, 0x10, 0x49, 0x50, 0x41, 0x63, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x43, 0x69, 0x64, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x02, 0x69, 0x70, 0x22, 0x7f, 0x0a, 0x10, 0x49, 0x50, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x43, 0x69, 0x64, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x32, 0x8c, 0x03, 0x0a, 0x0b, 0x49, 0x70, 0x61, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x09, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x50, 0x12, 0x14, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x50, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x50, 0x12,
	0x14, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_ipam_proto_rawDescOnce sync.Once
	file_v1_ipam_proto_rawDescData = file_v1_ipam_proto_rawDesc
)

func file_v1_ipam_proto_rawDescGZIP() []byte {
	file_v1_ipam_proto_rawDescOnce.Do(func() {
		file_v1_ipam_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_ipam_proto_rawDescData)
	})
	return file_v1_ipam_proto_rawDescData
}

var file_v1_ipam_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_v1_ipam_proto_goTypes = []interface{}{
	(*Prefix)(nil),                 // 0: v1.Prefix
	(*PrefixResponse)(nil),         // 1: v1.PrefixResponse
	(*PrefixCreateRequest)(nil),    // 2: v1.PrefixCreateRequest
	(*PrefixDeleteRequest)(nil),    // 3: v1.PrefixDeleteRequest
	(*PrefixGetRequest)(nil),       // 4: v1.PrefixGetRequest
	(*AcquireChildRequest)(nil),    // 5: v1.AcquireChildRequest
	(*ReleaseChildRequest)(nil),    // 6: v1.ReleaseChildRequest
	(*IP)(nil),                     // 7: v1.IP
	(*IPResponse)(nil),             // 8: v1.IPResponse
	(*IPAcquireRequest)(nil),       // 9: v1.IPAcquireRequest
	(*IPReleaseRequest)(nil),       // 10: v1.IPReleaseRequest
	(*wrapperspb.StringValue)(nil), // 11: google.protobuf.StringValue
}
var file_v1_ipam_proto_depIdxs = []int32{
	11, // 0: v1.Prefix.namespace:type_name -> google.protobuf.StringValue
	0,  // 1: v1.PrefixResponse.prefix:type_name -> v1.Prefix
	11, // 2: v1.AcquireChildRequest.namespace:type_name -> google.protobuf.StringValue
	11, // 3: v1.ReleaseChildRequest.namespace:type_name -> google.protobuf.StringValue
	11, // 4: v1.IP.namespace:type_name -> google.protobuf.StringValue
	7,  // 5: v1.IPResponse.ip:type_name -> v1.IP
	11, // 6: v1.IPAcquireRequest.namespace:type_name -> google.protobuf.StringValue
	11, // 7: v1.IPAcquireRequest.ip:type_name -> google.protobuf.StringValue
	11, // 8: v1.IPReleaseRequest.namespace:type_name -> google.protobuf.StringValue
	2,  // 9: v1.IpamService.Create:input_type -> v1.PrefixCreateRequest
	3,  // 10: v1.IpamService.Delete:input_type -> v1.PrefixDeleteRequest
	4,  // 11: v1.IpamService.Get:input_type -> v1.PrefixGetRequest
	5,  // 12: v1.IpamService.AcquireChild:input_type -> v1.AcquireChildRequest
	6,  // 13: v1.IpamService.ReleaseChild:input_type -> v1.ReleaseChildRequest
	9,  // 14: v1.IpamService.AcquireIP:input_type -> v1.IPAcquireRequest
	10, // 15: v1.IpamService.ReleaseIP:input_type -> v1.IPReleaseRequest
	1,  // 16: v1.IpamService.Create:output_type -> v1.PrefixResponse
	1,  // 17: v1.IpamService.Delete:output_type -> v1.PrefixResponse
	1,  // 18: v1.IpamService.Get:output_type -> v1.PrefixResponse
	1,  // 19: v1.IpamService.AcquireChild:output_type -> v1.PrefixResponse
	1,  // 20: v1.IpamService.ReleaseChild:output_type -> v1.PrefixResponse
	8,  // 21: v1.IpamService.AcquireIP:output_type -> v1.IPResponse
	8,  // 22: v1.IpamService.ReleaseIP:output_type -> v1.IPResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_v1_ipam_proto_init() }
func file_v1_ipam_proto_init() {
	if File_v1_ipam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_ipam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefixResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefixCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefixDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefixGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireChildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseChildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAcquireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ipam_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_ipam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_ipam_proto_goTypes,
		DependencyIndexes: file_v1_ipam_proto_depIdxs,
		MessageInfos:      file_v1_ipam_proto_msgTypes,
	}.Build()
	File_v1_ipam_proto = out.File
	file_v1_ipam_proto_rawDesc = nil
	file_v1_ipam_proto_goTypes = nil
	file_v1_ipam_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IpamServiceClient is the client API for IpamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IpamServiceClient interface {
	Create(ctx context.Context, in *PrefixCreateRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	Delete(ctx context.Context, in *PrefixDeleteRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	Get(ctx context.Context, in *PrefixGetRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	AcquireChild(ctx context.Context, in *AcquireChildRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	ReleaseChild(ctx context.Context, in *ReleaseChildRequest, opts ...grpc.CallOption) (*PrefixResponse, error)
	AcquireIP(ctx context.Context, in *IPAcquireRequest, opts ...grpc.CallOption) (*IPResponse, error)
	ReleaseIP(ctx context.Context, in *IPReleaseRequest, opts ...grpc.CallOption) (*IPResponse, error)
}

type ipamServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIpamServiceClient(cc grpc.ClientConnInterface) IpamServiceClient {
	return &ipamServiceClient{cc}
}

func (c *ipamServiceClient) Create(ctx context.Context, in *PrefixCreateRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) Delete(ctx context.Context, in *PrefixDeleteRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) Get(ctx context.Context, in *PrefixGetRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) AcquireChild(ctx context.Context, in *AcquireChildRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/AcquireChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) ReleaseChild(ctx context.Context, in *ReleaseChildRequest, opts ...grpc.CallOption) (*PrefixResponse, error) {
	out := new(PrefixResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/ReleaseChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) AcquireIP(ctx context.Context, in *IPAcquireRequest, opts ...grpc.CallOption) (*IPResponse, error) {
	out := new(IPResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/AcquireIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipamServiceClient) ReleaseIP(ctx context.Context, in *IPReleaseRequest, opts ...grpc.CallOption) (*IPResponse, error) {
	out := new(IPResponse)
	err := c.cc.Invoke(ctx, "/v1.IpamService/ReleaseIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IpamServiceServer is the server API for IpamService service.
type IpamServiceServer interface {
	Create(context.Context, *PrefixCreateRequest) (*PrefixResponse, error)
	Delete(context.Context, *PrefixDeleteRequest) (*PrefixResponse, error)
	Get(context.Context, *PrefixGetRequest) (*PrefixResponse, error)
	AcquireChild(context.Context, *AcquireChildRequest) (*PrefixResponse, error)
	ReleaseChild(context.Context, *ReleaseChildRequest) (*PrefixResponse, error)
	AcquireIP(context.Context, *IPAcquireRequest) (*IPResponse, error)
	ReleaseIP(context.Context, *IPReleaseRequest) (*IPResponse, error)
}

// UnimplementedIpamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIpamServiceServer struct {
}

func (*UnimplementedIpamServiceServer) Create(context.Context, *PrefixCreateRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedIpamServiceServer) Delete(context.Context, *PrefixDeleteRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedIpamServiceServer) Get(context.Context, *PrefixGetRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedIpamServiceServer) AcquireChild(context.Context, *AcquireChildRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireChild not implemented")
}
func (*UnimplementedIpamServiceServer) ReleaseChild(context.Context, *ReleaseChildRequest) (*PrefixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseChild not implemented")
}
func (*UnimplementedIpamServiceServer) AcquireIP(context.Context, *IPAcquireRequest) (*IPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireIP not implemented")
}
func (*UnimplementedIpamServiceServer) ReleaseIP(context.Context, *IPReleaseRequest) (*IPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseIP not implemented")
}

func RegisterIpamServiceServer(s *grpc.Server, srv IpamServiceServer) {
	s.RegisterService(&_IpamService_serviceDesc, srv)
}

func _IpamService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrefixCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).Create(ctx, req.(*PrefixCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrefixDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).Delete(ctx, req.(*PrefixDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrefixGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).Get(ctx, req.(*PrefixGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_AcquireChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).AcquireChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/AcquireChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).AcquireChild(ctx, req.(*AcquireChildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_ReleaseChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).ReleaseChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/ReleaseChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).ReleaseChild(ctx, req.(*ReleaseChildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_AcquireIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IPAcquireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).AcquireIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/AcquireIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).AcquireIP(ctx, req.(*IPAcquireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpamService_ReleaseIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IPReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpamServiceServer).ReleaseIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.IpamService/ReleaseIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpamServiceServer).ReleaseIP(ctx, req.(*IPReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IpamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.IpamService",
	HandlerType: (*IpamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IpamService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _IpamService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _IpamService_Get_Handler,
		},
		{
			MethodName: "AcquireChild",
			Handler:    _IpamService_AcquireChild_Handler,
		},
		{
			MethodName: "ReleaseChild",
			Handler:    _IpamService_ReleaseChild_Handler,
		},
		{
			MethodName: "AcquireIP",
			Handler:    _IpamService_AcquireIP_Handler,
		},
		{
			MethodName: "ReleaseIP",
			Handler:    _IpamService_ReleaseIP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/ipam.proto",
}
